// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ButtonBack /> should render itself 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonBack
    label="Back"
    route="/"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <span
          className="mr5 icon-cheveron-left"
/>,
        "Back",
      ],
      "className": "app-header-nav-item btn btn-icon txt-tiny tr",
      "replace": false,
      "to": "/",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mr5 icon-cheveron-left",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      "Back",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <span
            className="mr5 icon-cheveron-left"
/>,
          "Back",
        ],
        "className": "app-header-nav-item btn btn-icon txt-tiny tr",
        "replace": false,
        "to": "/",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mr5 icon-cheveron-left",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "Back",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ButtonBack /> should render the optional props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonBack
    label="test label"
    route="/test"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <span
          className="mr5 icon-cheveron-left"
/>,
        "test label",
      ],
      "className": "app-header-nav-item btn btn-icon txt-tiny tr",
      "replace": false,
      "to": "/test",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mr5 icon-cheveron-left",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      "test label",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <span
            className="mr5 icon-cheveron-left"
/>,
          "test label",
        ],
        "className": "app-header-nav-item btn btn-icon txt-tiny tr",
        "replace": false,
        "to": "/test",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mr5 icon-cheveron-left",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "test label",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
